Name: Anubhavnidhi Abhashkumar
CSL-ID: anubhavnidhi
Name: Rasiga Gowrisankar
CSL-ID: rasiga
Implementation Details:
			In this program, we first check if there is a tee(%) command or pipe command(|). If there are no such command then we execute the command in a child (after forking) using a execvp call. Also if there is a redirection(>) or append(>>), then we close the standard output and open a file (whose name is mentioned in the right hand side of > or >>). If there is a single pipe command, then we create 2 child processes. In the first child we execute the left hand side of the pipe and instead of writing to output we put into a pipe. The second process takes an input from the same pipe and then execute the right side of pipe (and print it to the output). If there is are two pipe command, then we create 3 child processes. In the first child we execute the left most command (left of the first pipe) and instead of writing to output we put into a pipe1. The second process takes an input from the same pipe1 and then execute the command in the middle part of the program, also the output is put into another pipe2. Finally the third process reads from pipe2, executes the rightmost command (right of the second pipe). If it is a tee command, then also we create 3 child processes. In the first child we execute the left hand side of the tee command and instead of writing to output we put into a pipe1. The second process takes an input from the same pipe1 and the mytee c program which writes the pipe1 output into a file named tee.txt and also send it into another pipe2. Finally the third process reads from pipe2, executes the right hand side of the tee command. Also if the command is an exit command then we use the exit system call, if it is pwd then using getpwd we print the path it in the program or if it is a cd command then we use chdir to change directory.  
